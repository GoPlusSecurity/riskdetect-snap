{"version":3,"file":"component---src-pages-index-tsx-b5f64bbd323a63fed91f.js","mappings":"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","sources":["webpack://site/./src/pages/index.tsx"],"sourcesContent":["import { useContext } from 'react';\nimport styled from 'styled-components';\nimport { MetamaskActions, MetaMaskContext } from '../hooks';\nimport {\n  connectSnap,\n  getSnap,\n  sendHello,\n  shouldDisplayReconnectButton,\n} from '../utils';\nimport {\n  ConnectButton,\n  InstallFlaskButton,\n  ReconnectButton,\n  SendHelloButton,\n  Card,\n} from '../components';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  flex: 1;\n  margin-top: 7.6rem;\n  margin-bottom: 7.6rem;\n  ${({ theme }) => theme.mediaQueries.small} {\n    padding-left: 2.4rem;\n    padding-right: 2.4rem;\n    margin-top: 2rem;\n    margin-bottom: 2rem;\n    width: auto;\n  }\n`;\n\nconst Heading = styled.h1`\n  margin-top: 0;\n  margin-bottom: 2.4rem;\n  text-align: center;\n`;\n\nconst Span = styled.span`\n  color: ${(props) => props.theme.colors.primary.default};\n`;\n\nconst Subtitle = styled.p`\n  font-size: ${({ theme }) => theme.fontSizes.large};\n  font-weight: 500;\n  margin-top: 0;\n  margin-bottom: 0;\n  ${({ theme }) => theme.mediaQueries.small} {\n    font-size: ${({ theme }) => theme.fontSizes.text};\n  }\n`;\n\nconst CardContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  max-width: 64.8rem;\n  width: 100%;\n  height: 100%;\n  margin-top: 1.5rem;\n`;\n\nconst Notice = styled.div`\n  background-color: ${({ theme }) => theme.colors.background.alternative};\n  border: 1px solid ${({ theme }) => theme.colors.border.default};\n  color: ${({ theme }) => theme.colors.text.alternative};\n  border-radius: ${({ theme }) => theme.radii.default};\n  padding: 2.4rem;\n  margin-top: 2.4rem;\n  max-width: 60rem;\n  width: 100%;\n\n  & > * {\n    margin: 0;\n  }\n  ${({ theme }) => theme.mediaQueries.small} {\n    margin-top: 1.2rem;\n    padding: 1.6rem;\n  }\n`;\n\nconst ErrorMessage = styled.div`\n  background-color: ${({ theme }) => theme.colors.error.muted};\n  border: 1px solid ${({ theme }) => theme.colors.error.default};\n  color: ${({ theme }) => theme.colors.error.alternative};\n  border-radius: ${({ theme }) => theme.radii.default};\n  padding: 2.4rem;\n  margin-bottom: 2.4rem;\n  margin-top: 2.4rem;\n  max-width: 60rem;\n  width: 100%;\n  ${({ theme }) => theme.mediaQueries.small} {\n    padding: 1.6rem;\n    margin-bottom: 1.2rem;\n    margin-top: 1.2rem;\n    max-width: 100%;\n  }\n`;\n\nconst Index = () => {\n  const [state, dispatch] = useContext(MetaMaskContext);\n\n  const handleConnectClick = async () => {\n    try {\n      await connectSnap();\n      const installedSnap = await getSnap();\n\n      dispatch({\n        type: MetamaskActions.SetInstalled,\n        payload: installedSnap,\n      });\n    } catch (e) {\n      console.error(e);\n      dispatch({ type: MetamaskActions.SetError, payload: e });\n    }\n  };\n\n  const handleSendHelloClick = async () => {\n    try {\n      await sendHello();\n    } catch (e) {\n      console.error(e);\n      dispatch({ type: MetamaskActions.SetError, payload: e });\n    }\n  };\n\n  return (\n    <Container>\n      <Heading>\n        Welcome to <Span>Assets Health Detection</Span>\n      </Heading>\n      {/* <Subtitle>\n        Get started by editing <code>src/index.ts</code>\n      </Subtitle> */}\n      <CardContainer>\n        {state.error && (\n          <ErrorMessage>\n            <b>An error happened:</b> {state.error.message}\n          </ErrorMessage>\n        )}\n        {!state.isFlask && (\n          <Card\n            content={{\n              title: 'Install',\n              description:\n                'Snaps is pre-release software only available in MetaMask Flask, a canary distribution for developers with access to upcoming features.',\n              button: <InstallFlaskButton />,\n            }}\n            fullWidth\n          />\n        )}\n        {!state.installedSnap && (\n          <Card\n            content={{\n              title: 'Connect',\n              description:\n                'Connect to get the latest version of Assets Health Detection snap.',\n              button: (\n                <ConnectButton\n                  onClick={handleConnectClick}\n                  disabled={!state.isFlask}\n                />\n              ),\n            }}\n            disabled={!state.isFlask}\n          />\n        )}\n        {shouldDisplayReconnectButton(state.installedSnap) && (\n          <Card\n            content={{\n              title: 'Reconnect',\n              description:\n                'Reconnet to get the latest version of Assets Health Detection snap.',\n              button: (\n                <ReconnectButton\n                  onClick={handleConnectClick}\n                  disabled={!state.installedSnap}\n                />\n              ),\n            }}\n            disabled={!state.installedSnap}\n          />\n        )}\n        <Card\n          content={{\n            title: 'Start Assets Health Detection',\n            description: 'Get risk report of all your assets with one klick.',\n            button: (\n              <SendHelloButton\n                onClick={handleSendHelloClick}\n                disabled={!state.installedSnap}\n              />\n            ),\n          }}\n          disabled={!state.installedSnap}\n          fullWidth={\n            state.isFlask &&\n            Boolean(state.installedSnap) &&\n            !shouldDisplayReconnectButton(state.installedSnap)\n          }\n        />\n        {/* <Notice>\n          <p>\n            Please note that the <b>snap.manifest.json</b> and{' '}\n            <b>package.json</b> must be located in the server root directory and\n            the bundle must be hosted at the location specified by the location\n            field.\n          </p>\n        </Notice> */}\n      </CardContainer>\n    </Container>\n  );\n};\n\nexport default Index;\n"],"names":["Container","styled","displayName","componentId","_ref","theme","mediaQueries","small","Heading","Span","props","colors","primary","default","CardContainer","_ref2","fontSizes","large","_ref3","_ref4","text","ErrorMessage","_ref5","background","alternative","_ref6","border","_ref7","_ref8","radii","_ref9","_ref10","error","muted","_ref11","_ref12","_ref13","_ref14","state","dispatch","useContext","MetaMaskContext","handleConnectClick","async","connectSnap","installedSnap","getSnap","type","MetamaskActions","payload","e","console","_jsxs","children","_jsx","message","isFlask","Card","content","title","description","button","InstallFlaskButton","fullWidth","ConnectButton","onClick","disabled","shouldDisplayReconnectButton","ReconnectButton","SendHelloButton","sendHello","Boolean"],"sourceRoot":""}